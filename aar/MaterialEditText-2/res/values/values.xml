<?xml version="1.0" encoding="utf-8"?>
<resources>
    <dimen name="bottom_ellipsis_height">4dp</dimen>
    <dimen name="bottom_text_size">12sp</dimen>
    <dimen name="default_padding_bottom">8dp</dimen>
    <dimen name="default_padding_top">8dp</dimen>
    <dimen name="floating_label_text_size">12sp</dimen>
    <dimen name="inner_components_spacing">8dp</dimen>
    <dimen name="inner_padding_left">0dp</dimen>
    <dimen name="inner_padding_right">0dp</dimen>
    <string name="app_name">My Library</string>
    <declare-styleable name="MaterialEditText">
    <!-- The base color of the line and the texts. Default is black. -->
    <attr format="color" name="met_baseColor"/>
    <!-- The highlight color of the line, and the floating label if the highlightFloatingLabel is true. -->
    <attr format="color" name="met_primaryColor"/>
    <!-- How the floating label should be shown. Default is none -->
    <attr name="met_floatingLabel">
      <enum name="none" value="0"/>
      <enum name="normal" value="1"/>
      <enum name="highlight" value="2"/>
    </attr>
    <!-- The color for when something is wrong.(e.g. exceeding max characters) -->
    <attr format="color" name="met_errorColor"/>
    <!-- Min characters count limit. 0 means no limit. -->
    <attr format="integer" name="met_minCharacters"/>
    <!-- max Characters count limit. 0 means no limit. -->
    <attr format="integer" name="met_maxCharacters"/>
    <!-- Whether to show the bottom ellipsis in singleLine mode -->
    <attr format="boolean" name="met_singleLineEllipsis"/>
    <!-- Reserved bottom text lines count, no matter if there is some helper/error text. -->
    <attr format="integer" name="met_minBottomTextLines"/>
    <!-- Helper text at the bottom -->
    <attr format="string" name="met_helperText"/>
    <!-- Helper text color -->
    <attr format="color" name="met_helperTextColor"/>
    <!-- Font of the paint used to draw accent texts -->
    <attr format="string" name="met_accentTypeface"/>
    <!-- Font used on view -->
    <attr format="string" name="met_typeface"/>
    <!-- Custom float label text -->
    <attr format="string" name="met_floatingLabelText"/>
    <!-- spacing between the main text and the floating label -->
    <attr format="dimension" name="met_floatingLabelPadding"/>
    <!-- Hide underline -->
    <attr format="boolean" name="met_hideUnderline"/>
    <!-- Underline's color -->
    <attr format="color" name="met_underlineColor"/>
    <!-- Auto validate -->
    <attr format="boolean" name="met_autoValidate"/>
    <!-- Left icon -->
    <attr format="reference" name="met_iconLeft"/>
    <!-- Right icon -->
    <attr format="reference" name="met_iconRight"/>
    <!-- Padding between icon(s) and the main area. 8dp by default. -->
    <attr format="dimension" name="met_iconPadding"/>
    <!-- Clear button -->
    <attr format="boolean" name="met_clearButton"/>
    <!-- The floating label's text size. 12sp by default. -->
    <attr format="dimension" name="met_floatingLabelTextSize"/>
    <!-- The floating label's text color. -1 by default. -->
    <attr format="color" name="met_floatingLabelTextColor"/>
    <!-- The bottom texts' size. 12sp by default. -->
    <attr format="dimension" name="met_bottomTextSize"/>
    <!-- Always show the floating label, instead of animating it in/out. False by default. -->
    <attr format="boolean" name="met_floatingLabelAlwaysShown"/>
    <!-- Always show the helper text, no matter if the edit text is focused. False by default. -->
    <attr format="boolean" name="met_helperTextAlwaysShown"/>
    <!-- Whether use animation to show/hide the floating label. True by default. -->
    <attr format="boolean" name="met_floatingLabelAnimating"/>
    <!-- Text color -->
    <attr format="color" name="met_textColor"/>
    <!-- Hint Text Color -->
    <attr format="color" name="met_textColorHint"/>
    <!-- Auto validate on focus lost. False by default. -->
    <attr format="boolean" name="met_validateOnFocusLost"/>
    <!-- Whether check the characters count at the beginning it's shown. True by default. -->
    <attr format="boolean" name="met_checkCharactersCountAtBeginning"/>

  </declare-styleable>
</resources>